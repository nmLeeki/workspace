/* Noto Sans */
@font-face {
	font-family: 'Noto Sans';
	font-weight: 200;
	font-style: normal;
	src: url('../fonts/NotoSansKR-Light.eot');
	src: local(※), url('../fonts/NotoSansKR-Light.eot#iefix') format('embedded-opentype'),
	url('../fonts/NotoSansKR-Light.woff') format('woff'),
	url('../fonts/NotoSansKR-Light.otf') format('opentype');
	}
	@font-face {
	font-family: 'Noto Sans';
	font-weight: 300;
	font-style: normal;
	src: url('../fonts/NotoSansKR-DemiLight.eot');
	src: local(※), url('../fonts/NotoSansKR-DemiLight.eot#iefix') format('embedded-opentype'),
	url('../fonts/NotoSansKR-DemiLight.woff') format('woff'),
	url('../fonts/NotoSansKR-DemiLight.otf') format('opentype');
	}
	@font-face {
	font-family: 'Noto Sans';
	font-weight: 400;
	font-style: normal;
	src: url('../common/fonts/NotoSansKR-Regular.eot');
	src: local(※), url('../fonts/NotoSansKR-Regular.eot#iefix') format('embedded-opentype'),
	url('../fonts/NotoSansKR-Regular.woff') format('woff'),
	url('../fonts/NotoSansKR-Regular.otf') format('opentype');
	}
	@font-face {
	font-family: 'Noto Sans';
	font-weight: 500;
	font-style: normal;
	src: url('../fonts/NotoSansKR-Medium.eot');
	src: local(※), url('../fonts/NotoSansKR-Medium.eot#iefix') format('embedded-opentype'),
	url('../fonts/NotoSansKR-Medium.woff') format('woff'),
	url('../fonts/NotoSansKR-Medium.otf') format('opentype');
	}
	@font-face {
	font-family: 'Noto Sans';
	font-weight: 700;
	font-style: normal;
	src: url('../fonts/NotoSansKR-Bold.eot');
	src: local(※), url('../fonts/NotoSansKR-Bold.eot#iefix') format('embedded-opentype'),
	url('../fonts/NotoSansKR-Bold.woff') format('woff'),
	url('../fonts/NotoSansKR-Bold.otf') format('opentype');
	}
/* roboto */
@font-face {
	font-family: 'Roboto';
	font-weight: 700;
	font-style: normal;
	src: url('../fonts/Roboto-Bold.eot');
	src: local(※), url('../fonts/Roboto-Bold.eot#iefix') format('embedded-opentype'),
	url('../fonts/Roboto-Bold.woff') format('woff'),
	url('../fonts/Roboto-Bold.otf') format('opentype');
	}
  @font-face {
	font-family: 'Roboto';
	font-weight: 500;
	font-style: normal;
	src: url('../fonts/Roboto-Medium.eot');
	src: local(※), url('../fonts/Roboto-Medium.eot#iefix') format('embedded-opentype'),
	url('../fonts/Roboto-Medium.woff') format('woff'),
	url('../fonts/Roboto-Medium.otf') format('opentype');
	}
  @font-face {
	font-family: 'Roboto';
	font-weight: 400;
	font-style: normal;
	src: url('../fonts/Roboto-Regular.eot');
	src: local(※), url('../fonts/Roboto-Regular.eot#iefix') format('embedded-opentype'),
	url('../fonts/Roboto-Regular.woff') format('woff'),
	url('../fonts/Roboto-Regular.otf') format('opentype');
	}
  @font-face {
	font-family: 'Roboto';
	font-weight: 300;
	font-style: normal;
	src: url('../fonts/Roboto-Light.eot');
	src: local(※), url('../fonts/Roboto-Light.eot#iefix') format('embedded-opentype'),
	url('../fonts/Roboto-Light.woff') format('woff'),
	url('../fonts/Roboto-Light.otf') format('opentype');
	}


//기본 폰트크기
$fs: 16px;
//기본 줄간격
$lh: 1.4;
//기본컬러
$color: #000;

//text-color
$fc1: #111;
$fc2: #555;
$fc3: #999;

//point-color
$pc1: #17bdcc;
$pc2: #ff0000;
$color1: #17bdcc;

//bg-color
$bc1: #edfdff;

//border
$border1: 1px solid #dedede;
$border2: 1px solid #efefef;
$border3: 1px solid #efefef;

/********* reset.css **********/
html,
body {
  height: 100%;
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ul,
ol,
li,
form,
fieldset,
legend,
label,
input,
button,
select,
textarea,
header,
main,
footer,
section,
article,
aside,
menu,
nav,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
summary,
figure,
figcaption,
hgroup,
address {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
body {
  font-size: $fs;
  line-height: $lh;
  color: $color;
  font-family: "Roboto", "Noto Sans", "sans-serif";
  background-color: #fff;
  position: static !important;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
address {
  display: block;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 1rem;
  font-weight: normal;
}
ul,
ol,
li {
  list-style-type: none;
}
ul:after,
ol:after,
dl:after {
  display: block;
  clear: both;
  content: "";
}
a {display:block;
  color: inherit;
  text-decoration: none;
}
img {
  border: 0;
  vertical-align: top;
}

form {
  display: block;
  width: 100%;
}
caption,
legend {
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  margin: -1px;
}
select::-ms-expand,
input::-ms-check {
  display: none;
}
input,
select,
textarea {
  padding: 0 10px;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 100%;
  display: block;
  border: 0;
  font-family: inherit;
}
button {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: 0 none;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
}
table {
  border-collapse: collapse;
  table-layout: fixed;
}
.hide {
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  margin: -1px;
  position: absolute;
  left: 0;
  right: 0;
}
.clear {
  clear: both;
}
.br {
  display: block;
}



//font-size
$fs-10: 0.625rem; // 10px
$fs-12: 0.75rem; // 12px
$fs-13: 0.8125rem; // 13px
$fs-14: 0.875rem; // 14px
$fs-15: 0.9375rem; // 15px
$fs-16: 1rem; // 16px
$fs-17: 1.0625rem; // 17px
$fs-18: 1.125rem; // 18px
$fs-19: 1.1875rem; // 19px
$fs-20: 1.25rem; // 20px
$fs-21: 1.3125rem; // 21px
$fs-22: 1.375rem; // 22px
$fs-23: 1.4375rem; // 23px
$fs-24: 1.5rem; // 24px
$fs-26: 1.625rem; // 26px
$fs-28: 1.75rem; // 28px
$fs-30: 1.875rem; // 30px
$fs-32: 2rem; // 32px

//style
$header-height: 203px;
//mixin
/*clear*/
@mixin clear {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}

// ... 처리
@mixin ell1 {
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display:block;
}
@mixin ell2 {
  text-overflow: ellipsis;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
@mixin ell3 {
  text-overflow: ellipsis;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}
@mixin ell4 {
  text-overflow: ellipsis;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
}

/*요소중앙정렬*/
@mixin align($align, $font-size) {
  font-size: 0;
  &:before {
    display: inline-block;
    height: 100%;
    content: "";
    vertical-align: $align;
  }
  > :nth-child(n) {
    font-size: $font-size;
    display: inline-block;
    vertical-align: $align;
  }
}

/*아이템 정렬*/
@mixin ftItem($i, $pd) {
  > :nth-child(n) {
    float: left;
    width: calc(#{100 / $i}% - #{($i - 1) * $pd / $i}px);
    margin-right: #{$pd}px;
  }
  > :nth-of-type(#{$i}n) {
    margin-right: 0;
  }
  > :not(:nth-of-type(#{$i}n + 1)) {
    clear: none;
  }
  > :nth-of-type(#{$i}n + 1) {
    clear: both;
  }
}

// 반응형 중단점
$container: 1340px;
$pc1200: 1200px;
$tb1080: 1080px;
$m720: 720px;
@mixin maxWidth($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}
@mixin minWidth($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}
@mixin score{
  font-family: $ff-score;
}

@mixin scroll{ 
  &::-webkit-scrollbar {
    width: 6px;
    height:6px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: #999999;
    border-radius: 3px;
  }
  &::-webkit-scrollbar-track {
    background-color: #f8f8f8;
    border-radius: 3px;
  }
}